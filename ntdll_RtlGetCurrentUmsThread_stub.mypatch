diff --git a/dlls/ntdll/rtl.c b/dlls/ntdll/rtl.c
index 8b48cd48624..0032c5ee139 100755
--- a/dlls/ntdll/rtl.c
+++ b/dlls/ntdll/rtl.c
@@ -32,6 +32,7 @@
 #include "winsock2.h"
 #include "windef.h"
 #include "winternl.h"
+#include "winnt.h"
 #include "wine/debug.h"
 #include "wine/exception.h"
 #include "ntdll_misc.h"
@@ -2234,3 +2234,32 @@ char WINAPI RtlQueryProcessPlaceholderCompatibilityMode(void)
     FIXME("stub\n");
     return PHCM_APPLICATION_DEFAULT;
 }
+
+/*********************************************************************
+ *           RtlGetCurrentUmsThread [NTDLL.@]
+ */
+DEFINE_FASTCALL_WRAPPER(RtlGetCurrentUmsThread, 16)
+LONG64 FASTCALL RtlGetCurrentUmsThread(struct _TEB *currentTEB)
+{
+    struct _TEB *TEB1;
+    struct _TEB *TEB2;
+
+    
+    if(!currentTEB)
+        return STATUS_INVALID_PARAMETER;
+       
+    TEB1 = (struct _TEB *)NtCurrentTeb();
+    TEB2 = TEB1->TlsSlots[4];
+    
+    if(!TEB2)
+        return STATUS_NOT_SUPPORTED;
+       
+    if(*(struct _TEB**)&TEB2->GdiTebBatch.Buffer[120] == TEB1)
+    {    
+        /* *thread = **TEB2; */
+        currentTEB->Tib.ExceptionList = (struct _EXCEPTION_REGISTRATION_RECORD *)TEB2;
+        return STATUS_SUCCESS;
+    }
+       
+    return STATUS_NOT_SUPPORTED; 
+}
diff --git a/dlls/ntdll/ntdll.spec b/dlls/ntdll/ntdll.spec
index dcfa30f356b..ae4deef854e 100755
--- a/dlls/ntdll/ntdll.spec    
+++ b/dlls/ntdll/ntdll.spec
@@ -1113,6 +1113,7 @@
 @ stdcall RtlxOemStringToUnicodeSize(ptr) RtlOemStringToUnicodeSize
 @ stdcall RtlxUnicodeStringToAnsiSize(ptr) RtlUnicodeStringToAnsiSize
 @ stdcall RtlxUnicodeStringToOemSize(ptr) RtlUnicodeStringToOemSize
+@ stdcall -fastcall -arch=win64 RtlGetCurrentUmsThread(ptr)
 @ stdcall TpAllocCleanupGroup(ptr)
 @ stdcall TpAllocIoCompletion(ptr ptr ptr ptr ptr)
 @ stdcall TpAllocPool(ptr ptr)
